prototype(Milly.CrudUI:Component.IndexTableHeaderRow) < prototype(Neos.Fusion:Component) {

    CrudUIView = 'index'
    modelClassName = ''
    showColumnForLabel = true

    renderer = afx`
        <div class="tr">
            <div class="th" @if={props.showColumnForLabel}>
                <Milly.CrudUI:Component.ActionUi.OrderBy propertyName='label' modelClassName={props.modelClassName} />

                <Neos.Fusion.Form:Form form.data.filter={props.filterValues} form.target.action="index" attributes.class={'filter'} attributes.id={String.md5(props.modelClassName)+'-filter'}/>
                <Neos.Fusion:Fragment @if.hasFilterType={Milly.CrudUI.getConfigurationByModel(props.modelClassName, 'views.'+props.CrudUIView+'.filter.label.type')}>
                    <Neos.Fusion.Form:Form form.data.filter={props.filterValues} form.target.action="index">
                        <Milly.CrudUI:Component.PropertyFilter filterValues={props.filterValues} propertyName='label' modelClassName={props.modelClassName} />
                    </Neos.Fusion.Form:Form>
                </Neos.Fusion:Fragment>
            </div>
            <Neos.Fusion:Loop items={Milly.CrudUI.getConfigurationByModel(props.modelClassName, 'properties', props.CrudUIView)} itemKey="propertyName" itemName="propertyConfig">
                <div class="th" style="vertical-align: top;">
                    <Milly.CrudUI:Component.Label.PropertyLabel propertyName={propertyName} propertyConfig={propertyConfig} modelClassName={props.modelClassName}
                                                                   @if.notHasOrderBy={!Milly.CrudUI.getConfigurationByModel(props.modelClassName, 'views.'+props.CrudUIView+'.orderBy') || !Milly.Array.hasValue(Milly.CrudUI.getConfigurationByModel(props.modelClassName, 'views.'+props.CrudUIView+'.orderBy'), propertyName)}/>

                    <Milly.CrudUI:Component.ActionUi.OrderBy propertyName={propertyName} modelClassName={props.modelClassName} />

                    <Neos.Fusion:Fragment @if.hasFilterType={Milly.CrudUI.getConfigurationByModel(props.modelClassName, 'views.'+props.CrudUIView+'.filter.'+propertyName+'.type')}>
                        <br/>
                        <Neos.Fusion.Form:Form form.data.filter={props.filterValues} form.target.action="index">
                            <Milly.CrudUI:Component.PropertyFilter filterValues={props.filterValues} propertyName={propertyName} propertyConfig={propertyConfig} modelClassName={props.modelClassName}/>
                        </Neos.Fusion.Form:Form>
                    </Neos.Fusion:Fragment>
                </div>
            </Neos.Fusion:Loop>
            <div class="th neos-action" style="vertical-align: top;">
                <Neos.Fusion:Fragment @if={false}>
                    <span class={"neos-button neos-pull-right"+(filterValues?" neos-active":"")} id="toggle-filter">
                        <Milly.CrudUI:Atom.Icon.Filter />
                    </span>
                </Neos.Fusion:Fragment>
            </div>
        </div>
    `

}
